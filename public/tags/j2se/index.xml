<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>J2SE on itning</title><link>https://blog.itning.top/tags/j2se/</link><description>Recent content in J2SE on itning</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 23 Apr 2019 11:36:10 +0800</lastBuildDate><atom:link href="https://blog.itning.top/tags/j2se/index.xml" rel="self" type="application/rss+xml"/><item><title>Java生产环境下性能监控与调优详解</title><link>https://blog.itning.top/post/2019/04/23/java%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E4%B8%8E%E8%B0%83%E4%BC%98%E8%AF%A6%E8%A7%A3/</link><pubDate>Tue, 23 Apr 2019 11:36:10 +0800</pubDate><guid>https://blog.itning.top/post/2019/04/23/java%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E4%B8%8E%E8%B0%83%E4%BC%98%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h2 id="基于jdk命令行工具的监控">基于JDK命令行工具的监控&lt;/h2>
&lt;h3 id="x参数">X参数&lt;/h3>
&lt;p>非标准化参数 有可能会变 但变化比较小&lt;/p>
&lt;ul>
&lt;li>
&lt;p>-Xint&lt;/p>
&lt;p>解释执行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-Xcomp&lt;/p>
&lt;p>第一次使用就编译成本地代码&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-Xmixed&lt;/p>
&lt;p>混合模式，JVM自己来决定是否编译成本地代码&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>JAVA8中Stream接口用法</title><link>https://blog.itning.top/post/2018/06/09/java8%E4%B8%ADstream%E6%8E%A5%E5%8F%A3%E7%94%A8%E6%B3%95/</link><pubDate>Sat, 09 Jun 2018 00:36:46 +0800</pubDate><guid>https://blog.itning.top/post/2018/06/09/java8%E4%B8%ADstream%E6%8E%A5%E5%8F%A3%E7%94%A8%E6%B3%95/</guid><description>&lt;p>JAVA8 中所有Stream接口&lt;/p>
&lt;p>&lt;img src="https://blog.itning.top/images/2018-06-09-JAVA8%E4%B8%ADStream%E6%8E%A5%E5%8F%A3%E7%94%A8%E6%B3%95/a.png" alt="a">&lt;/p></description></item><item><title>单例设计模式</title><link>https://blog.itning.top/post/2018/05/02/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><pubDate>Wed, 02 May 2018 19:15:18 +0800</pubDate><guid>https://blog.itning.top/post/2018/05/02/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid><description>&lt;p>解决一个类在内存中只存在一个对象，想要保证对象的唯一。&lt;/p>
&lt;ol>
&lt;li>为了避免其他程序过多的建立该类对象。禁止其他程序建立该类对象。&lt;/li>
&lt;li>为了其他程序可以访问该类对象，在本类中自定义一个对象。&lt;/li>
&lt;li>方便其他程序对自定义类的对象的访问，对外提供一些访问方式。&lt;/li>
&lt;/ol></description></item></channel></rss>