<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>J2SE on itning</title><link>https://blog.itning.top/categories/j2se/</link><description>Recent content in J2SE on itning</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 15 Sep 2019 18:32:13 +0800</lastBuildDate><atom:link href="https://blog.itning.top/categories/j2se/index.xml" rel="self" type="application/rss+xml"/><item><title>Synchronized</title><link>https://blog.itning.top/post/2019/09/15/synchronized/</link><pubDate>Sun, 15 Sep 2019 18:32:13 +0800</pubDate><guid>https://blog.itning.top/post/2019/09/15/synchronized/</guid><description>&lt;p>&lt;strong>偏向锁 01&lt;/strong>&lt;/p>
&lt;p>&lt;strong>轻量级锁 00&lt;/strong>&lt;/p>
&lt;p>&lt;strong>重量级锁 10&lt;/strong>&lt;/p>
&lt;p>对象在内存中的布局分为三块区域：&lt;strong>对象头，实例数据，填充数据&lt;/strong>&lt;/p></description></item><item><title>SpringBoot中如何发送邮件</title><link>https://blog.itning.top/post/2019/06/25/springboot%E4%B8%AD%E5%A6%82%E4%BD%95%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</link><pubDate>Tue, 25 Jun 2019 16:36:22 +0800</pubDate><guid>https://blog.itning.top/post/2019/06/25/springboot%E4%B8%AD%E5%A6%82%E4%BD%95%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</guid><description>&lt;h2 id="邮件发送">邮件发送&lt;/h2>
&lt;h3 id="引入maven-dependency">引入maven dependency&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="c">&amp;lt;!-- https://mvnrepository.com/artifact/javax.mail/mail --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>javax.mail&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>mail&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.4.7&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- https://mvnrepository.com/artifact/org.freemarker/freemarker --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.freemarker&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>freemarker&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>2.3.28&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Java生产环境下性能监控与调优详解</title><link>https://blog.itning.top/post/2019/04/23/java%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E4%B8%8E%E8%B0%83%E4%BC%98%E8%AF%A6%E8%A7%A3/</link><pubDate>Tue, 23 Apr 2019 11:36:10 +0800</pubDate><guid>https://blog.itning.top/post/2019/04/23/java%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E4%B8%8E%E8%B0%83%E4%BC%98%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h2 id="基于jdk命令行工具的监控">基于JDK命令行工具的监控&lt;/h2>
&lt;h3 id="x参数">X参数&lt;/h3>
&lt;p>非标准化参数 有可能会变 但变化比较小&lt;/p>
&lt;ul>
&lt;li>
&lt;p>-Xint&lt;/p>
&lt;p>解释执行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-Xcomp&lt;/p>
&lt;p>第一次使用就编译成本地代码&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-Xmixed&lt;/p>
&lt;p>混合模式，JVM自己来决定是否编译成本地代码&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>jsoup库api简介</title><link>https://blog.itning.top/post/2018/09/16/jsoup%E5%BA%93api%E7%AE%80%E4%BB%8B/</link><pubDate>Sun, 16 Sep 2018 19:27:01 +0800</pubDate><guid>https://blog.itning.top/post/2018/09/16/jsoup%E5%BA%93api%E7%AE%80%E4%BB%8B/</guid><description>&lt;h2 id="getelementsbytag">getElementsByTag&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">Elements&lt;/span> &lt;span class="nf">getElementsByTag&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">tagName&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>根据标签获取元素
&lt;strong>什么是标签？&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">&amp;lt;div&amp;gt;标签
&amp;lt;p&amp;gt;标签
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>JAVA8中Stream接口用法</title><link>https://blog.itning.top/post/2018/06/09/java8%E4%B8%ADstream%E6%8E%A5%E5%8F%A3%E7%94%A8%E6%B3%95/</link><pubDate>Sat, 09 Jun 2018 00:36:46 +0800</pubDate><guid>https://blog.itning.top/post/2018/06/09/java8%E4%B8%ADstream%E6%8E%A5%E5%8F%A3%E7%94%A8%E6%B3%95/</guid><description>&lt;p>JAVA8 中所有Stream接口&lt;/p>
&lt;p>&lt;img src="https://blog.itning.top/images/2018-06-09-JAVA8%E4%B8%ADStream%E6%8E%A5%E5%8F%A3%E7%94%A8%E6%B3%95/a.png" alt="a">&lt;/p></description></item><item><title>JAVA设计模式</title><link>https://blog.itning.top/post/2018/06/07/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><pubDate>Thu, 07 Jun 2018 09:20:29 +0800</pubDate><guid>https://blog.itning.top/post/2018/06/07/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid><description>&lt;blockquote>
&lt;p>在&lt;a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B">软件工程&lt;/a>中，&lt;strong>设计模式&lt;/strong>（design pattern）是对&lt;a href="https://zh.wikipedia.org/wiki/%E8%BB%9F%E4%BB%B6%E8%A8%AD%E8%A8%88">软件设计&lt;/a>中普遍存在（反复出现）的各种问题，所提出的解决方案。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://blog.itning.top/images/2018-06-07-JAVA%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/a.png" alt="a">&lt;/p></description></item><item><title>volatile工作机制</title><link>https://blog.itning.top/post/2018/05/30/volatile%E5%B7%A5%E4%BD%9C%E6%9C%BA%E5%88%B6/</link><pubDate>Wed, 30 May 2018 08:23:52 +0800</pubDate><guid>https://blog.itning.top/post/2018/05/30/volatile%E5%B7%A5%E4%BD%9C%E6%9C%BA%E5%88%B6/</guid><description>&lt;p>&lt;strong>volatile并非线程安全的&lt;/strong>&lt;/p></description></item><item><title>JAVA JMS Java消息服务（Java Message Service） 的实现ActiveMQ</title><link>https://blog.itning.top/post/2018/05/03/java-jms-java%E6%B6%88%E6%81%AF%E6%9C%8D%E5%8A%A1java-message-service-%E7%9A%84%E5%AE%9E%E7%8E%B0activemq/</link><pubDate>Thu, 03 May 2018 12:06:31 +0800</pubDate><guid>https://blog.itning.top/post/2018/05/03/java-jms-java%E6%B6%88%E6%81%AF%E6%9C%8D%E5%8A%A1java-message-service-%E7%9A%84%E5%AE%9E%E7%8E%B0activemq/</guid><description>&lt;blockquote>
&lt;p>JMS即Java消息服务（Java Message Service）应用程序接口是一个Java平台中关于面向消息中间件（MOM）的API，用于在两个应用程序之间，或分布式系统中发送消息，进行异步通信。Java消息服务是一个与具体平台无关的API，绝大多数MOM提供商都对JMS提供支持。
JMS是一种与厂商无关的 API，用来访问消息收发系统消息。它类似于JDBC(Java Database Connectivity)：这里，JDBC 是可以用来访问许多不同关系数据库的 API，而 JMS 则提供同样与厂商无关的访问方法，以访问消息收发服务。许多厂商都支持 JMS，包括 IBM 的 MQSeries、BEA的 Weblogic JMS service和 Progress 的 SonicMQ，这只是几个例子。 JMS 使您能够通过消息收发服务（有时称为消息中介程序或路由器）从一个 JMS 客户机向另一个 JMS客户机发送消息。消息是 JMS 中的一种类型对象，由两部分组成：报头和消息主体。报头由路由信息以及有关该消息的元数据组成。消息主体则携带着应用程序的数据或有效负载。根据有效负载的类型来划分，可以将消息分为几种类型，它们分别携带：简单文本(TextMessage)、可序列化的对象 (ObjectMessage)、属性集合 (MapMessage)、字节流 (BytesMessage)、原始值流 (StreamMessage)，还有无有效负载的消息 (Message)。&lt;/p>
&lt;/blockquote></description></item><item><title>单例设计模式</title><link>https://blog.itning.top/post/2018/05/02/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><pubDate>Wed, 02 May 2018 19:15:18 +0800</pubDate><guid>https://blog.itning.top/post/2018/05/02/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid><description>&lt;p>解决一个类在内存中只存在一个对象，想要保证对象的唯一。&lt;/p>
&lt;ol>
&lt;li>为了避免其他程序过多的建立该类对象。禁止其他程序建立该类对象。&lt;/li>
&lt;li>为了其他程序可以访问该类对象，在本类中自定义一个对象。&lt;/li>
&lt;li>方便其他程序对自定义类的对象的访问，对外提供一些访问方式。&lt;/li>
&lt;/ol></description></item></channel></rss>