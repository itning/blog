<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>软考 on itning</title><link>https://blog.itning.top/tags/%E8%BD%AF%E8%80%83/</link><description>Recent content in 软考 on itning</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 13 May 2018 11:33:41 +0800</lastBuildDate><atom:link href="https://blog.itning.top/tags/%E8%BD%AF%E8%80%83/index.xml" rel="self" type="application/rss+xml"/><item><title>设内存按字节编址，若8K×8bit存储空间的起始地址为7000H，则该存储空间的最大地址编号为</title><link>https://blog.itning.top/post/2018/05/13/%E8%AE%BE%E5%86%85%E5%AD%98%E6%8C%89%E5%AD%97%E8%8A%82%E7%BC%96%E5%9D%80%E8%8B%A58k8bit%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E7%9A%84%E8%B5%B7%E5%A7%8B%E5%9C%B0%E5%9D%80%E4%B8%BA7000h%E5%88%99%E8%AF%A5%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%9C%B0%E5%9D%80%E7%BC%96%E5%8F%B7%E4%B8%BA/</link><pubDate>Sun, 13 May 2018 11:33:41 +0800</pubDate><guid>https://blog.itning.top/post/2018/05/13/%E8%AE%BE%E5%86%85%E5%AD%98%E6%8C%89%E5%AD%97%E8%8A%82%E7%BC%96%E5%9D%80%E8%8B%A58k8bit%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E7%9A%84%E8%B5%B7%E5%A7%8B%E5%9C%B0%E5%9D%80%E4%B8%BA7000h%E5%88%99%E8%AF%A5%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%9C%B0%E5%9D%80%E7%BC%96%E5%8F%B7%E4%B8%BA/</guid><description>&lt;blockquote>
&lt;p>设内存按字节编址，若8K×8bit存储空间的起始地址为7000H，则该存储空间的最大地址编号为（7）。&lt;/p>
&lt;p>(7)A.7FFF B.8FFF C.9FFF D.AFFF&lt;/p>
&lt;/blockquote></description></item><item><title>二叉树-已知先序或后续遍历和中序遍历求画出二叉树及后续或先序遍历</title><link>https://blog.itning.top/post/2018/05/04/%E4%BA%8C%E5%8F%89%E6%A0%91-%E5%B7%B2%E7%9F%A5%E5%85%88%E5%BA%8F%E6%88%96%E5%90%8E%E7%BB%AD%E9%81%8D%E5%8E%86%E5%92%8C%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E6%B1%82%E7%94%BB%E5%87%BA%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%8A%E5%90%8E%E7%BB%AD%E6%88%96%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86/</link><pubDate>Fri, 04 May 2018 15:46:16 +0800</pubDate><guid>https://blog.itning.top/post/2018/05/04/%E4%BA%8C%E5%8F%89%E6%A0%91-%E5%B7%B2%E7%9F%A5%E5%85%88%E5%BA%8F%E6%88%96%E5%90%8E%E7%BB%AD%E9%81%8D%E5%8E%86%E5%92%8C%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E6%B1%82%E7%94%BB%E5%87%BA%E4%BA%8C%E5%8F%89%E6%A0%91%E5%8F%8A%E5%90%8E%E7%BB%AD%E6%88%96%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86/</guid><description>&lt;p>二叉树有三种遍历方式:先序遍历,中序遍历,后续遍历&lt;/p>
&lt;p>&lt;strong>1.先序遍历&lt;/strong>&lt;/p>
&lt;p>(1)访问根结点；&lt;/p>
&lt;p>(2)先序遍历左子树；&lt;/p>
&lt;p>(3)先序遍历右子树。&lt;/p></description></item></channel></rss>